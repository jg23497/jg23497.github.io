<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://jgulan.dev</id>
    <title>J. Gulan Blog</title>
    <updated>2024-02-27T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://jgulan.dev"/>
    <subtitle>J. Gulan Blog</subtitle>
    <icon>https://jgulan.dev/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA['Command not found' when running chruby]]></title>
        <id>https://jgulan.dev/2024/02/27/chruby-error</id>
        <link href="https://jgulan.dev/2024/02/27/chruby-error"/>
        <updated>2024-02-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Following the Ruby community’s advice to avoid using the system-installed Ruby instance for development, you]]></summary>
        <content type="html"><![CDATA[<p>Following the Ruby community’s advice to avoid using the system-installed Ruby instance for development, you
install <a href="https://github.com/postmodern/chruby" target="_blank" rel="noopener noreferrer">chruby</a> using the <a href="https://github.com/postmodern/chruby?tab=readme-ov-file#install" target="_blank" rel="noopener noreferrer">official installation instructions</a>
and intend to configure your Ruby versions using <a href="https://github.com/postmodern/ruby-install" target="_blank" rel="noopener noreferrer">ruby-install</a>. After
installing chruby, you open a terminal and see the following error when running the command on your Unix-like OS
(Ubuntu Linux or MacOS):</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ chruby</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">chruby: command not found</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="what-happened">What happened?<a href="https://jgulan.dev/2024/02/27/chruby-error#what-happened" class="hash-link" aria-label="Direct link to What happened?" title="Direct link to What happened?">​</a></h4>
<p>Let's take a closer look at what happened. The <a href="https://github.com/postmodern/chruby/blob/a543a35790e5528b5a67de20e78a7390f5f7606e/scripts/setup.sh#L65" target="_blank" rel="noopener noreferrer">installation script</a> automatically adds a <em>/etc/profile.d</em> script at
<em>/etc/profile.d/chruby.sh</em>. The <em>/etc/profile.d</em> scripts are themselves auto-discovered and then executed by the
<em>/etc/profile</em> script, which one might expect to happen upon logging in:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockTitle_Ktv7">Extract from Ubuntu's /etc/profile file</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-d</span><span class="token plain"> /etc/profile.d </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> </span><span class="token for-or-select variable" style="color:rgb(189, 147, 249);font-style:italic">i</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> /etc/profile.d/*.sh</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">do</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-r</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$i</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">then</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">.</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">$i</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fi</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">done</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">unset</span><span class="token plain"> i</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">fi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>However, <em>/etc/profile</em> is invoked only for login shells. A login shell is what we use when logging in via SSH or via a TTY.
Our terminal instance is an interactive non-login shell and so <em>/etc/profile</em> is not executed, including our new <em>chruby.sh</em> script that
would have made the chruby command available to our session.</p>
<p>To make the chruby command available to an interactive shell, we must configure our shell accordingly. For Bash this involves editing the
<em>~/.bashrc</em> or <em>/etc/bash.bashrc</em> files, which are the current user and global configuration scripts for Bash respectively:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockTitle_Ktv7">~/.bashrc</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token builtin class-name" style="color:rgb(189, 147, 249)">source</span><span class="token plain"> /usr/local/share/chruby/chruby.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>For ZSH on MacOS, the equivalent files would be <em>~/.zshrc</em> and <em>/etc/zshrc</em>. If using a shell other than Bash or ZSH, consult the documentation
to ensure the correct configuration script is updated.</p>
<p>Correctly configured, we now see the following when running chruby:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ chruby</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">   ruby-3.3.0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="what-next">What next?<a href="https://jgulan.dev/2024/02/27/chruby-error#what-next" class="hash-link" aria-label="Direct link to What next?" title="Direct link to What next?">​</a></h4>
<p>Although the convention for Unix-like application installers is <em>not</em> to touch the user's data, the Google Cloud SDK installer asks users
whether it should update their <em>~/.bashrc</em> file as part of the installation process:</p>
<blockquote>
<p>Modify profile to update your $PATH and enable bash completion? (Y/n)?</p>
</blockquote>
<p>The chruby installer could help users by offering to do the same, even if only handling the most popular shells like Bash or ZSH.</p>]]></content>
        <category label="engineering" term="engineering"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Image noise reduction using DxO PhotoLab]]></title>
        <id>https://jgulan.dev/2023/01/25/image-noise-reduction-using-dxo-photolab</id>
        <link href="https://jgulan.dev/2023/01/25/image-noise-reduction-using-dxo-photolab"/>
        <updated>2023-01-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Disclaimer: I am a paying user of DxO PhotoLab, but have no other association or affiliation with the company. The opinions stated here are my own and I have not been incentivized to write them.]]></summary>
        <content type="html"><![CDATA[<p><em>Disclaimer: I am a paying user of DxO PhotoLab, but have no other association or affiliation with the company. The opinions stated here are my own and I have not been incentivized to write them.</em></p>
<p>Some photographers enjoy the unobtrusive, film-like character that subtle image noise can add to an image, particularly for black-and-white photography.
In my experience, however, many of us prefer clean and noise-free images for the same reason that we prefer clean and noise-free audio — noise distracts our senses and clouds the signal.</p>
<p>For images, noise can lead to the loss of detail and colour information. Luminance noise, which presents as random variations in pixel illumination, is easier to forgive, whereas chroma noise, which presents as random variations in pixel colour, is an unsightly distraction.</p>
<img align="left" class="with-margin" src="https://jgulan.dev/assets/images/noise-cd2fad532affc79089e75a83c71f0d45.jpg" alt="A noisy image">
<p>Recent advancements in image sensor technology mean that noise is less of an issue than it was say a decade ago, but image noise will still be noticeable when shooting at higher ISO values and can be particularly problematic for smaller image sensors that gather smaller quantities of light such as 1-inch, Micro Four Thirds and APS-C sensors.</p>
<p>Until recently, noise reduction algorithms have been fairly rudimentary, often resulting in a noticeable loss of detail as the image details are 'smoothed out' to hide the noise.
This changed with the release of <a href="https://www.dxo.com/dxo-photolab/" target="_blank" rel="noopener noreferrer">DxO PhotoLab</a>'s DeepPRIME noise reduction algorithm. The exact inner workings of DxO's proprietary algorithm have not been disclosed by the company, however we know that
PhotoLab employs Artificial Intelligence in the form of a neural network that has been trained to perform the <a href="https://en.wikipedia.org/wiki/Demosaicing" target="_blank" rel="noopener noreferrer">demosaicing</a> and denoising processes.</p>
<p>In any case, the results speak for themselves. Below is a 100% crop of a raw image taken of a Christmas elf figure in low-light conditions at ISO 1250 using my Olympus OM-D E-M1 Mark II, paired with the Olympus 25mm f1.2 PRO lens.
If it is not already clear, the left side is the image processed without noise reduction and the right side is the image processed with PhotoLab's DeepPRIME noise reduction (v5.5).</p>
<div class="with-margin" style="position:relative;overflow:hidden;user-select:none;-khtml-user-select:none;-ms-user-select:none;-moz-user-select:none;-webkit-user-select:none" data-rcs="root"><img src="https://jgulan.dev/assets/images/denoised-100pc-6b199029b848a9f3909c38ac847f90d7.jpg" alt="After noise reduction (100% crop)" style="display:block;width:100%;height:100%;max-width:100%;box-sizing:border-box;object-fit:cover;object-position:center" data-rcs="image"><div style="position:absolute;top:0;left:0;width:100%;height:100%;will-change:clip;user-select:none;-khtml-user-select:none;-moz-user-select:none;-webkit-user-select:none" data-rcs="clip-item"><img src="https://jgulan.dev/assets/images/noise-100pc-c2c819e6a319f0c29e9d0a9259b865e8.jpg" alt="Before noise reduction (100% crop)" style="display:block;width:100%;height:100%;max-width:100%;box-sizing:border-box;object-fit:cover;object-position:center" data-rcs="image"></div><div style="position:absolute;top:0;width:100%;height:100%;pointer-events:none" data-rcs="handle-container"><div style="position:absolute;height:100%;transform:translateX(-50%);pointer-events:all"><div class="__rcs-handle-root" style="display:flex;flex-direction:column;place-items:center;height:100%;cursor:ew-resize;pointer-events:none;color:#fff"><div class="__rcs-handle-line" style="flex-grow:1;height:100%;width:2px;background-color:currentColor;pointer-events:auto;box-shadow:0 0 7px rgba(0,0,0,.35)"></div><div class="__rcs-handle-button" style="display:grid;grid-auto-flow:column;gap:8px;place-content:center;flex-shrink:0;width:56px;height:56px;border-radius:50%;border-style:solid;border-width:2px;pointer-events:auto;backdrop-filter:blur(7px);-webkit-backdrop-filter:blur(7px);box-shadow:0 0 7px rgba(0,0,0,.35)"><div style="width:0;height:0;border-top:8px solid transparent;border-right:10px solid;border-bottom:8px solid transparent"></div><div style="width:0;height:0;border-top:8px solid transparent;border-right:10px solid;border-bottom:8px solid transparent;transform:rotate(180deg)"></div></div><div class="__rcs-handle-line" style="flex-grow:1;height:100%;width:2px;background-color:currentColor;pointer-events:auto;box-shadow:0 0 7px rgba(0,0,0,.35)"></div></div></div></div></div>
<p>A further enlargement of the same crop follows:</p>
<div class="with-margin" style="position:relative;overflow:hidden;user-select:none;-khtml-user-select:none;-ms-user-select:none;-moz-user-select:none;-webkit-user-select:none" data-rcs="root"><img src="https://jgulan.dev/assets/images/denoised-200pc-0f2e930ad280dc9b0f382d21150a07b7.jpg" alt="After noise reduction (200% crop)" style="display:block;width:100%;height:100%;max-width:100%;box-sizing:border-box;object-fit:cover;object-position:center" data-rcs="image"><div style="position:absolute;top:0;left:0;width:100%;height:100%;will-change:clip;user-select:none;-khtml-user-select:none;-moz-user-select:none;-webkit-user-select:none" data-rcs="clip-item"><img src="https://jgulan.dev/assets/images/noise-200pc-a2a7ad0d2941b3c978235b72ceb5a6bf.jpg" alt="Before noise reduction (200% crop)" style="display:block;width:100%;height:100%;max-width:100%;box-sizing:border-box;object-fit:cover;object-position:center" data-rcs="image"></div><div style="position:absolute;top:0;width:100%;height:100%;pointer-events:none" data-rcs="handle-container"><div style="position:absolute;height:100%;transform:translateX(-50%);pointer-events:all"><div class="__rcs-handle-root" style="display:flex;flex-direction:column;place-items:center;height:100%;cursor:ew-resize;pointer-events:none;color:#fff"><div class="__rcs-handle-line" style="flex-grow:1;height:100%;width:2px;background-color:currentColor;pointer-events:auto;box-shadow:0 0 7px rgba(0,0,0,.35)"></div><div class="__rcs-handle-button" style="display:grid;grid-auto-flow:column;gap:8px;place-content:center;flex-shrink:0;width:56px;height:56px;border-radius:50%;border-style:solid;border-width:2px;pointer-events:auto;backdrop-filter:blur(7px);-webkit-backdrop-filter:blur(7px);box-shadow:0 0 7px rgba(0,0,0,.35)"><div style="width:0;height:0;border-top:8px solid transparent;border-right:10px solid;border-bottom:8px solid transparent"></div><div style="width:0;height:0;border-top:8px solid transparent;border-right:10px solid;border-bottom:8px solid transparent;transform:rotate(180deg)"></div></div><div class="__rcs-handle-line" style="flex-grow:1;height:100%;width:2px;background-color:currentColor;pointer-events:auto;box-shadow:0 0 7px rgba(0,0,0,.35)"></div></div></div></div></div>
<p>The reduction in noise is significant, all without any obvious loss of image detail. DeepPRIME noise reduction has been a game-changer for my Micro Four Thirds photography and I look forward to seeing what further enhnacements
the team at DxO Labs can make.</p>]]></content>
        <category label="photography" term="photography"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Detecting regression commits using git bisect]]></title>
        <id>https://jgulan.dev/2023/01/15/detecting-regression-commits-using-git-bisect</id>
        <link href="https://jgulan.dev/2023/01/15/detecting-regression-commits-using-git-bisect"/>
        <updated>2023-01-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Locating the commit that introduced a regression, or some undesirable change, in a codebase can be difficult. Locating the same in a frequently-changing codebase with a large number of contributors is harder again.]]></summary>
        <content type="html"><![CDATA[<p>Locating the commit that introduced a regression, or some undesirable change, in a codebase can be difficult. Locating the same in a frequently-changing codebase with a large number of contributors is harder again.</p>
<p>Fortunately <a href="https://git-scm.com/docs/git-bisect" target="_blank" rel="noopener noreferrer"><code>git bisect</code></a> provides a helpful tool for doing precisely this. Rather than performing a linear search of the commits, <code>git bisect</code> uses a clever binary search algorithm to locate the offending commit far more efficiently.</p>
<div class="center with-margin"><svg xmlns="http://www.w3.org/2000/svg" width="593.29" height="260.27" viewBox="0 0 156.97 68.863" class="bisect_xRd9"><title>Git Bisect Visualisation</title><defs><marker id="a" markerHeight="6.155" markerWidth="5.324" orient="auto-start-reverse" overflow="visible" preserveAspectRatio="xMidYMid" viewBox="0 0 5.324 6.155"><path fill="context-stroke" fill-rule="evenodd" stroke="context-stroke" stroke-width=".5pt" d="M2.885 0-1.44 2.5v-5z"></path></marker></defs><path fill="#9b9b9b" d="M-.002 0h156.84v68.612H-.002z"></path><g fill="#1a1a1a" stroke="#323232"><path stroke-dasharray="1.76709, 0.441771" stroke-width="0.444" d="M79.658 57.627V25.93"></path><path stroke-dasharray="1.68087, 0.420216" stroke-width="0.422" d="m51.04 57.627-.115-19.754"></path><path stroke-width="0.965" d="M22.943 57.376V9.502M133.764 57.375V9.5"></path></g><g stroke="#323232"><path fill="none" stroke-width="0.507" marker-end="url(#a)" d="M97.649 24.312v1.522l-29.212.031.08 5.505" transform="translate(-18.006 -.533)"></path><path fill="none" stroke-width="0.507" marker-end="url(#a)" d="m68.518 33.251-.08 4.492 14.218-.08v18.324" transform="translate(-18.006 -.533)"></path><path fill="#d35f5f" stroke-width="0.2" d="M54.891 41.174h18.875v10.568H54.891z"></path></g><path fill="#ffd42a" stroke="#323232" stroke-width="0.166" d="M16.257 2.004h13.286v7.389H16.257z"></path><text xml:space="preserve" x="40.939" y="7.494" fill="#2e2e2e" stroke-width="0.507" font-family="Arial" font-size="3.528" text-anchor="middle" transform="translate(-18.006 -.533)"><tspan x="40.939" y="7.494" font-family="'Segoe UI'">Good</tspan></text><path fill="#ffd42a" stroke="#323232" stroke-width="0.166" d="M81.906 17.697h13.286v7.389H81.906z"></path><text xml:space="preserve" x="106.566" y="22.995" fill="#2e2e2e" stroke-width="0.507" font-family="Arial" font-size="3.528" text-anchor="middle" transform="translate(-18.006 -.533)"><tspan x="106.566" y="22.995" font-family="'Segoe UI'">Bad</tspan></text><path fill="#ffd42a" stroke="#323232" stroke-width="0.166" d="M127.104 2.02h13.286v7.39h-13.286z"></path><text xml:space="preserve" x="151.748" y="7.491" fill="#2e2e2e" stroke-width="0.507" font-family="Arial" font-size="3.528" text-anchor="middle" transform="translate(-18.006 -.533)"><tspan x="151.748" y="7.491" font-family="'Segoe UI'">Bad</tspan></text><text xml:space="preserve" x="82.317" y="46.028" fill="#2e2e2e" stroke-width="0.507" font-family="Arial" font-size="3.528" text-anchor="middle" transform="translate(-18.006 -.533)"><tspan x="82.317" y="46.028"><tspan x="82.317" y="46.028" font-family="'Segoe UI'">First bad</tspan></tspan><tspan x="82.317" y="50.437" font-family="'Segoe UI'">commit</tspan></text><path fill="#ffd42a" stroke="#323232" stroke-width="0.166" d="M35.048 27.114h13.286v7.389H35.048z"></path><text xml:space="preserve" x="59.731" y="32.605" fill="#2e2e2e" stroke-width="0.507" font-family="Arial" font-size="3.528" text-anchor="middle" transform="translate(-18.006 -.533)"><tspan x="59.731" y="32.605" font-family="'Segoe UI'">Good</tspan></text><path fill="#b3b3b3" stroke="#323232" stroke-width="0.265" d="M1.907 57.25h13.661v9.582H1.907z"></path><text xml:space="preserve" x="26.875" y="63.842" fill="#2e2e2e" stroke-width="0.507" font-family="Arial" font-size="3.528" text-anchor="middle" transform="translate(-18.006 -.533)"><tspan x="26.875" y="63.842" font-family="'Segoe UI'">1</tspan></text><path fill="#b3b3b3" stroke="#323232" stroke-width="0.265" d="M15.834 57.25h13.661v9.582H15.834z"></path><text xml:space="preserve" x="40.71" y="63.842" fill="#2e2e2e" stroke-width="0.507" font-family="Arial" font-size="3.528" text-anchor="middle" transform="translate(-18.006 -.533)"><tspan x="40.71" y="63.842" font-family="'Segoe UI'">2</tspan></text><path fill="#b3b3b3" stroke="#323232" stroke-width="0.265" d="M29.75 57.25h13.661v9.582H29.75z"></path><text xml:space="preserve" x="54.593" y="63.82" fill="#2e2e2e" stroke-width="0.507" font-family="Arial" font-size="3.528" text-anchor="middle" transform="translate(-18.006 -.533)"><tspan x="54.593" y="63.82" font-family="'Segoe UI'">3</tspan></text><path fill="#b3b3b3" stroke="#323232" stroke-width="0.265" d="M43.68 57.25h13.661v9.582H43.68z"></path><text xml:space="preserve" x="68.579" y="63.837" fill="#2e2e2e" stroke-width="0.507" font-family="Arial" font-size="3.528" text-anchor="middle" transform="translate(-18.006 -.533)"><tspan x="68.579" y="63.837" font-family="'Segoe UI'">4</tspan></text><path fill="#b3b3b3" stroke="#323232" stroke-width="0.265" d="M57.607 57.25h13.661v9.582H57.607z"></path><text xml:space="preserve" x="82.441" y="63.798" fill="#2e2e2e" stroke-width="0.507" font-family="Arial" font-size="3.528" text-anchor="middle" transform="translate(-18.006 -.533)"><tspan x="82.441" y="63.798" font-family="'Segoe UI'">5</tspan></text><path fill="#b3b3b3" stroke="#323232" stroke-width="0.265" d="M71.524 57.25h13.661v9.582H71.524z"></path><text xml:space="preserve" x="96.375" y="63.821" fill="#2e2e2e" stroke-width="0.507" font-family="Arial" font-size="3.528" text-anchor="middle" transform="translate(-18.006 -.533)"><tspan x="96.375" y="63.821" font-family="'Segoe UI'">6</tspan></text><path fill="#b3b3b3" stroke="#323232" stroke-width="0.265" d="M85.454 57.25h13.661v9.582H85.454z"></path><text xml:space="preserve" x="110.286" y="63.821" fill="#2e2e2e" stroke-width="0.507" font-family="Arial" font-size="3.528" text-anchor="middle" transform="translate(-18.006 -.533)"><tspan x="110.286" y="63.821" font-family="'Segoe UI'">7</tspan></text><path fill="#b3b3b3" stroke="#323232" stroke-width="0.265" d="M99.384 57.25h13.661v9.582H99.384z"></path><text xml:space="preserve" x="124.223" y="63.821" fill="#2e2e2e" stroke-width="0.507" font-family="Arial" font-size="3.528" text-anchor="middle" transform="translate(-18.006 -.533)"><tspan x="124.223" y="63.821" font-family="'Segoe UI'">8</tspan></text><path fill="#b3b3b3" stroke="#323232" stroke-width="0.265" d="M113.294 57.25h13.661v9.582h-13.661z"></path><text xml:space="preserve" x="138.138" y="63.821" fill="#2e2e2e" stroke-width="0.507" font-family="Arial" font-size="3.528" text-anchor="middle" transform="translate(-18.006 -.533)"><tspan x="138.138" y="63.821" font-family="'Segoe UI'">9</tspan></text><path fill="#b3b3b3" stroke="#323232" stroke-width="0.265" d="M127.224 57.25h13.661v9.582h-13.661z"></path><text xml:space="preserve" x="151.955" y="63.821" fill="#2e2e2e" stroke-width="0.507" font-family="Arial" font-size="3.528" text-anchor="middle" transform="translate(-18.006 -.533)"><tspan x="151.955" y="63.821" font-family="'Segoe UI'">10</tspan></text><path fill="#b3b3b3" stroke="#323232" stroke-width="0.265" d="M141.154 57.25h13.661v9.582h-13.661z"></path><text xml:space="preserve" x="166.122" y="63.842" fill="#2e2e2e" stroke-width="0.507" font-family="Arial" font-size="3.528" text-anchor="middle" transform="translate(-18.006 -.533)"><tspan x="166.122" y="63.842" font-family="'Segoe UI'">11</tspan></text><path fill="none" stroke="#323232" stroke-width="0.457" marker-start="url(#a)" d="M97.661 22.474V12.338" transform="translate(-18.006 -.533)"></path></svg></div>
<p>Having identified a commit from the past where the regression did not exist (e.g. <code>git checkout</code> a commit from say a month ago), my typical usage of <code>git bisect</code> is along the lines of:</p>
<ol>
<li>Check out the branch containing the regression and run <code>git bisect start</code>.</li>
<li>Label the good and bad commits: <code>git bisect good &lt;commit hash&gt;</code> and <code>git bisect bad &lt;commit hash&gt;</code>. The current commit is taken if the commit hash argument is omitted.</li>
<li>Bisecting commences — a candidate commit is automatically checked out and the number of revisions left to test and number of remaining steps are printed.  You can run <code>git bisect reset</code> to abort at any stage.</li>
<li>Check whether the regression still exists, whether this involves running an automated test or taking manual replication steps. If the candidate commit contains the regression, run <code>git bisect bad</code>, otherwise run <code>git bisect good</code>. If any search area remains, another candidate commit is automatically checked out.</li>
<li>Repeat #4 until the bisecting process concludes and the bad commit's hash is listed.</li>
</ol>
<p>Given <code>git bisect</code>'s binary search technique, the number of steps required will only increase logarithmically as the number of commits increases — this is a time-saving tool that I turn to again and again.</p>]]></content>
        <category label="engineering" term="engineering"/>
    </entry>
</feed>